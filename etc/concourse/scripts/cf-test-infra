#!/bin/bash

set -e

SCRIPT_DIR="${BASH_SOURCE%/*}"
source ${SCRIPT_DIR}/common-functions

echo "Logging to $CF_SYS_DOMAIN ..."
if [ "$SKIP_SSL_VALIDATION" == "true" ]; then
  skip='--skip-ssl-validation'
fi

cf api $skip https://api.$CF_SYS_DOMAIN
echo "" | cf login -u $CF_ADMIN_USER -p $CF_ADMIN_PASSWORD

if [ "$SKIP_CREATE_ORG" == "true" ]; then
  echo "Using existing org $CF_ORG ..."
else
  echo "Recreating organization and space ..."
  cf delete-org -f $CF_ORG
fi

cf create-quota $CF_ORG -m 40g -i 4g -r 40 -s 1 --allow-paid-service-plans
cf create-org $CF_ORG -q $CF_ORG
cf create-space $CF_SPACE -o $CF_ORG

if [ "$ENABLE_SERVICE_ACCESS" == "true" ]; then
  cf enable-service-access "$DB_SERVICE_NAME" -p "$DB_PLAN_NAME" -o "$CF_ORG"
fi

if [ "$SKIP_CREATE_USER" == "true" ]; then
  echo "Using existing user $CF_USER ..."
else
  echo "Recreating user ..."
  cf delete-user -f "$CF_USER"
  cf create-user "$CF_USER" "$CF_PASSWORD"
fi

cf set-org-role $CF_USER $CF_ORG OrgManager
cf set-space-role $CF_USER $CF_ORG $CF_SPACE SpaceManager
cf set-space-role $CF_USER $CF_ORG $CF_SPACE SpaceDeveloper

$SCRIPT_DIR/bind-security-group
$SCRIPT_DIR/create-uaa-clients

echo "Logging to $CF_SYS_DOMAIN as abacus user ..."
cf login $skip -a "https://api.$CF_SYS_DOMAIN" -u "$CF_USER" -p "$CF_PASSWORD" -o "$CF_ORG" -s "$CF_SPACE"

if [ "$CREATE_DB_SERVICE" == "true" ]; then
  echo "Creating or updating DB service instances ..."
  instances=($DB_SERVICE_INSTANCES)
  shouldWaitFor=()
  for instance in "${instances[@]}"; do
    args=(${instance//:/ })
    createOrUpdateService ${args[0]} ${args[1]}
    shouldWaitFor+=(${args[0]})
  done;
  waitForServices "${shouldWaitFor[@]}"
else
  echo "Using DB URL provided in abacus-config !"
fi

echo "Runnining custom configuration ..."
config_dir=$CONFIG_DIR
project_dir=$PROJECT_DIR
./$project_dir/etc/concourse/scripts/configure $config_dir
cp -R $config_dir/* $project_dir

echo ""
echo "Finished setting up infrastructure."
