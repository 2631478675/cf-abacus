# Cloud Foundry domain
cf-sys-domain: cf.mycompany.com

# Set this to true if you are using an existing org
# Setting this to false, will explicitly delete the cf-org and recreate it
skip-create-org: true

# Organization for the Abacus apps
cf-org: abacus

# Space used to host Abacus pipeline apps
cf-space: abacus

# Domain that will host the Abacus applications
cf-domain: cfapps.mycompany.com

# Set this to true if you are using an existing user
# Setting this to false, will explicitly delete the user and recreate it
skip-create-user: true

# cf user that will deploy apps to the cf-org
cf-user: abacus

# password for the cf-user
cf-password: abacus123

# cf uaa admin user that has the ability to create orgs, users, quotas
cf-admin-user: admin

# Password for the cf-admin-user
cf-admin-password: admin

# Comma-separated debug logs
debug:

# SLACK configured
slack:

# Set this to true to skip ssl validation
skip-ssl-validation: true

# Create/update DB service instance or use already provisioned DB
# Note: If you want to connect to already provisioned DB you should use "false" here
create-db-service: true

# Bind to a service instance or use hard-coded URL
# Note: If you want to connect to already provisioned DB you should use "false" here
bind-db-service: true

# DB service (Couch or Mongo) to use for storing Abacus data
# Note: Not used if create-db-service is false, but still required
db-service-name: service-name

# DB service instances
# Note: Not used if create-db-service is false, but still required
db-service-instances:
  - name: service-instance-name
    plan: plan-name

# Collector DB alias, used to identify DB service instances that belong to the collector group
# Note: Not used if bind-db-service is false, but still required
db-collector: db-collector

# Meter DB alias, used to identify DB service instances that belong to the meter group
# Note: Not used if bind-db-service is false, but still required
db-meter: db-meter

# Accumlator DB alias, used to identify DB service instances that belong to the accumulator group
# Note: Not used if bind-db-service is false, but still required
db-accumulator: db-accumulator

# Aggregator DB alias, used to identify DB service instances that belong to the aggregator group
# Note: Not used if bind-db-service is false, but still required
db-aggregator: db-aggregator

# Bridge DB alias, used to identify DB service instances that belong to the bridge / renewer group
# Note: Not used if bind-db-service is false, but still required
db-bridge: db-bridge

# Plugins DB alias, used to identify DB service instances that belong to the plugins group
# Note: Not used if bind-db-service is false, but still required
db-plugins: db-plugins

# Enable the service plan. Change this to "true" if you need to enable the access (the plan is paid for instance)
# Note: Not used if create-db-service is false, but still required
enable-service-access: false

# cf uaa admin client credentials required to authenticate using uaac
uaa-admin: admin

# Password for the uaa-admin user
uaa-secret: admin-secret

# UAA client: Abacus system user ID
system-client-id: abacus

# UAA client: Abacus system user secret
system-client-secret: secret

# UAA client: Cloud Controller user ID for administrative tasks
cc-client-id: abacus-cc-client

# UAA client: Cloud Controller admin client secret
cc-client-secret: secret

# UAA client: Abacus CF-Bridge user ID
bridge-client-id: abacus-cf-bridge

# UAA client: Abacus CF-Bridge authorities. Use "cloud_controller.admin" for CF prior v241
bridge-client-authorities: cloud_controller.admin_read_only

# UAA client: Abacus CF-Bridge user secret
bridge-client-secret: secret

# UAA client: ID of a client that can read data from Cloud Controller
cf-client-id: abacus-cf

# UAA client: Cloud Controller read client secret
cf-client-secret: secret

# UAA client: "Linux Container" resource provider client ID
container-client-id: abacus-linux-container

# UAA client: "Linux Container" resource provider client secret
container-client-secret: secret

# UAA client: "Object Storage" resource provider client ID
object-storage-client-id: abacus-object-storage

# UAA client: "Object Storage" resource provider client secret
object-storage-client-secret: secret

# UAA client: Client ID for monitoring Hystrix streams
hystrix-client-id: abacus-hystrix

# UAA client: Client secret for Abacus Hystrix streams
hystrix-client-secret: secret

# Authentication server: api.<cf-api>:443
auth-server: https://api.cf.mycompany.com:443

# How many times the script will try to restart all the failing applications. If no value is provided, the default one is 5.
restart-retries: 3

# Pipeline will trigger on changes to the specified paths
paths: cf-abacus,abacus-config

# Location of the project. Defaults to the name of the resource ("abacus")
project-dir: "abacus"

# Location of the test pipeline configuration
config-dir: "landscape/abacus-config/test"

# Abacus repo URI (or landscape project URI)
landscape-git-repo: https://github.com/cloudfoundry-incubator/cf-abacus.git

# Abacus repo branch
landscape-git-repo-branch: master

# Abacus repo (or landscape project repo) private key.
# Leave it as it is for mainstream github.com Abacus repo
landscape-git-repo-private-key: |
  -----BEGIN RSA PRIVATE KEY-----
     ... insert key here ...
  -----END RSA PRIVATE KEY-----

